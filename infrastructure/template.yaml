AWSTemplateFormatVersion: 2010-09-09
Parameters:
  DbName:
    Default: shoghly
    Description: The database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DbUsername:
    Type: AWS::SSM::Parameter::Value<String>
    Default: db-username
  DbPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: db-password
  EmailUser:
    Type: AWS::SSM::Parameter::Value<String>
    Default: email-user
  EmailPassword:
    Type: AWS::SSM::Parameter::Value<String>
    Default: email-password
  JwtSecretKey:
    Type: AWS::SSM::Parameter::Value<String>
    Default: jwt-secret-key
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  VpcId:
    Type: String
Mappings:
  RegionMap:
    eu-central-1:
      AMI: ami-09439f09c55136ecf
Resources:
  Rds:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Ref DbName
      DBName: shoghly
      DBInstanceClass: db.t2.micro
      AllocatedStorage: 20
      StorageType: gp2
      Engine: MySQL
      EngineVersion: 8.0.16
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      VPCSecurityGroups: 
        - !Ref RdsSecurityGroup

  RdsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable access via MySQL port 3306
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  Ec2:
    Type: AWS::EC2::Instance
    Properties: 
      IamInstanceProfile: !Ref Ec2InstanceProfile
      ImageId: !FindInMap [ RegionMap, !Ref AWS::Region, AMI ]
      KeyName: !Ref KeyName
      InstanceType: t2.micro
      SecurityGroupIds:
        - !Ref Ec2SecurityGroup
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash

            sudo yum update -y

            sudo yum install -y gcc-c++ make
            curl -sL https://rpm.nodesource.com/setup_14.x | sudo -E bash -
            sudo yum install -y nodejs

            sudo yum install -y git
            sudo git clone https://github.com/ahmednmourad/shoghly.git

            echo export DB_NAME=${DbName} | sudo tee -a /etc/profile
            echo export DB_HOSTNAME=${Rds.Endpoint.Address} | sudo tee -a /etc/profile
            echo export DB_USERNAME=${DbUsername} | sudo tee -a /etc/profile
            echo export DB_PASSWORD=${DbPassword} | sudo tee -a /etc/profile
            echo export EMAIL_USER=${EmailUser} | sudo tee -a /etc/profile
            echo export EMAIL_PASS=${EmailPassword} | sudo tee -a /etc/profile
            echo export JWT_SECRET_KEY=${JwtSecretKey} | sudo tee -a /etc/profile
            echo export S3_BUCKET_NAME='shoghly-s3' | sudo tee -a /etc/profile
            source /etc/profile.d/sdk.sh

            cd ./shoghly/backend
            npm install

            sudo npm install pm2 -g
            sudo pm2 start index.js --watch

  Ec2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Ec2S3Role

  Ec2S3Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: s3-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 's3:*'
                Resource: '*'

Outputs:
  DbEndpoint:
    Description: The connection endpoint for the database.
    Value: !GetAtt Rds.Endpoint.Address
  
  Ec2PublicDnsName:
    Description: The public DNS name of the specified instance.
    Value: !GetAtt Ec2.PublicDnsName
  
  Ec2PublicIp:
    Description: The public IP address of the specified instance.
    Value: !GetAtt Ec2.PublicIp
